#
# wm independent hotkeys
#

 # ROFI 


alt + Tab   	
    exec .config/rofi/launchers/alt-tab.sh

super + space
    exec .config/rofi/launchers/text/launcher.sh 

alt + x
    exec .config/rofi/powermenu/powermenu.sh

alt + c
	exec .config/rofi/launchers/clipboard.sh

super + shift + h
	exec .config/rofi/launchers/pw-output.sh


# terminal emulator
super + Return
	kitty

# program launcher

alt + b
    firefox

alt + f
    thunar

alt + shift + x
	susp

super + Delete
	xkill

alt + z 
	exec .config/scripts/keyboard-hint.sh

Num_Lock
	notify-send.sh -u low "NUM LOCK"


# VOLUME
XF86AudioRaiseVolume
    pulseaudio-dunst.sh up
    #pactl set-sink-volume @DEFAULT_SINK@ +2%

XF86AudioLowerVolume
    pulseaudio-dunst.sh down
    #pactl set-sink-volume @DEFAULT_SINK@ -2%

XF86AudioMute
    pulseaudio-dunst.sh mute
    #pactl set-sink-mute @DEFAULT_SINK@ toggle

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd && notify-send.sh -u normal SXHKD "Restarted successfully" --icon=done



# Screenshot

super + shift + p 
	maim --hidecursor --highlight --color=0.3,0.4,0.6,0.3 --bordersize=3 --format=png -g 2560x1440+1280+0 --quality=10 ~/Pictures/Screenshots/$(date +%s).png && notify-send.sh -u normal "Screenshot" "Was taken & saved" --icon=camera & notify-send.sh -u normal "Screenshot" "Was taken & saved" --icon=camera


super + shift + s
	maim --select --hidecursor --highlight --color=0.3,0.4,0.6,0.3 --bordersize=3 --format=png --quality=10 /dev/stdout | xclip -selection clipboard -t image/png && notify-send.sh -u normal "Screenshot" "Was taken" --icon=camera
    



#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r} && notify-send.sh -u normal BSPWM "Restarted successfully"  --icon=done

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# Toggle floating
super + d
    if [ -z "$(bspc query -N -n focused.floating)" ]; then \
        bspc node focused -t floating; \
    else \
        bspc node focused -t tiled; \
    fi

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
#super + {p,b,comma,period}
#	bspc node -f @{parent,brother,first,second}      

# focus the next/previous window in the current desktop
super + {_,shift + }a
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{z, x, c, v, b, `}
	bspc {desktop -f,node -d} {1, 2, 3, 4, 5, 0}

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}


# send node to another monitor
super + shift + {Left,Down,Up,Right}
	dir={west,south,north,east}; \
	bspc node -s "$dir.local" --follow \
	    || bspc node -m "$dir" --follow
